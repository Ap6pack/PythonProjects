import requests
import json

def query_vulnerabilities_by_commit(commit_hash):
    url = "https://api.osv.dev/v1/query"
    payload = {"commit": commit_hash}
    response = requests.post(url, data=json.dumps(payload))
    
    if response.status_code == 200:
        vulnerabilities = response.json()
        return vulnerabilities
    else:
        print(f"Error querying vulnerabilities for commit {commit_hash}. Status code: {response.status_code}")
        return None

def query_vulnerabilities_by_package(package_name, package_version, package_ecosystem):
    url = "https://api.osv.dev/v1/query"
    payload = {
        "version": package_version,
        "package": {"name": package_name, "ecosystem": package_ecosystem}
    }
    response = requests.post(url, data=json.dumps(payload))
    
    if response.status_code == 200:
        vulnerabilities = response.json()
        return vulnerabilities
    else:
        print(f"Error querying vulnerabilities for {package_name} {package_version}. Status code: {response.status_code}")
        return None

# Example usage:
commit_hash_example = "6879efc2c1596d11a6a6ad296f80063b558d5e0f"
vulnerabilities_commit = query_vulnerabilities_by_commit(commit_hash_example)
print("Vulnerabilities for commit:")
print(json.dumps(vulnerabilities_commit, indent=2))

package_name_example = "jinja2"
package_version_example = "2.4.1"
package_ecosystem_example = "PyPI"
vulnerabilities_package = query_vulnerabilities_by_package(package_name_example, package_version_example, package_ecosystem_example)
print("\nVulnerabilities for package:")
print(json.dumps(vulnerabilities_package, indent=2))
